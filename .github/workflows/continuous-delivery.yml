# yaml-language-server: https://json.schemastore.org/github-workflow.json

# Continuous Delivery Example (requires manual intervention to deploy to each environment)
# Use environments to require manual approvals between jobs
# Environments require public repositories or private repositories on GitHub with Enterprise plans

name: Continuous Delivery

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  deploymentSlotName: stage
  stageUrl: https://app-0a1b2c-stage.azurewebsites.net

jobs:
  
  # Build Application
  Build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v2

      # Publish the artificats so they are available by subsequent jobs

      # Uploading application to build artifact
      - name: Upload ARM Templates as Artifact
        continue-on-error: false
        uses: actions/upload-artifact@v2
        with:
          name: infra
          path: infra

      # Uploading application to build artifact
      - name: Upload Application Build as Artifact
        continue-on-error: false
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: src

      # Uploading variables folder to build artifact
      - name: Upload Application Build as Artifact
        continue-on-error: false
        uses: actions/upload-artifact@v2
        with:
          name: variables
          path: .github/variables


  # Deploy to the Development servers
  DeployDev:
    name: Development
    if: github.event_name == 'pull_request'
    needs: Build
    runs-on: ubuntu-latest
    environment: 
      name: Development
    
    steps:
      # Download Artifacts
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        continue-on-error: false

      # Load Environment Variables from local file
      - name: Load Environment Variables
        uses: fredcicles/github-actions/.github/actions/set-variables@samples/variable-files
        with:
            variableFileName: dev
          
      # Log in to Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy resources to Azure
      - uses: azure/arm-deploy@v1
        id: deployStep
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTIONID }}
          resourceGroupName:  ${{ env.resourceGroup }}
          template: ./infra/azuredeploy.json
          parameters: ./infra/azuredeploy.dev.parameters.json webAppName=${{ env.webAppName }}

      # Deploy code to web app
      - name: Deploy code to the WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.webAppName }}
          package: ./build

      - name: Deployment Message
        run: echo "Deployed Application to ${{ steps.deployStep.outputs.output1 }}"


  # Deploy to the QA servers
  DeployQA:
    name: QA
    if: github.event.ref == 'refs/heads/main'
    needs: Build
    runs-on: ubuntu-latest
    environment: 
      name: QA
    
    steps:
      # Download Artifacts
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        continue-on-error: false

      # Load Environment Variables from local file
      - name: Load Environment Variables
        uses: fredcicles/github-actions/.github/actions/set-variables@samples/variable-files
        with:
            variableFileName: qa
          
      # Log in to Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy resources to Azure
      - uses: azure/arm-deploy@v1
        id: deployStep
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTIONID }}
          resourceGroupName:  ${{ env.resourceGroup }}
          template: ./infra/azuredeploy.json
          parameters: ./infra/azuredeploy.qa.parameters.json webAppName=${{ env.webAppName }}

      # Deploy code to web app
      - name: Deploy code to the WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.webAppName }}
          package: ./build

      - name: Deployment Message
        run: echo "Deployed Application to ${{ steps.deployStep.outputs.output1 }}"


  # Deploy to the Staging servers
  DeployStage:
    name: Stage
    needs: DeployQA
    runs-on: ubuntu-latest
    environment: 
      name: Stage
    
    steps:
      # Download Artifacts
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        continue-on-error: false

      # Load Environment Variables from local file
      - name: Load Environment Variables
        uses: fredcicles/github-actions/.github/actions/set-variables@samples/variable-files
        with:
            variableFileName: prod
          
      # Log in to Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy resources to Azure
      - uses: azure/arm-deploy@v1
        id: deployStep
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTIONID }}
          resourceGroupName: ${{ env.resourceGroup }}
          template: ./infra/azuredeploy.json
          parameters: ./infra/azuredeploy.prod.parameters.json webAppName=${{ env.webAppName }}

      # Deploy code to web app
      - name: Deploy code to the WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.webAppName }}
          slot-name: ${{ env.deploymentSlotName }}
          package: ./build

      - name: Deployment Message
        run: echo "Deployed Application to ${{ steps.deployStep.outputs.output1 }}"


  # Deploy to the Production servers
  DeployProduction:
    name: Production
    needs: DeployStage
    runs-on: ubuntu-latest
    environment: 
      name: Production

    steps:
      # Download Artifacts
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        continue-on-error: false

      # Load Environment Variables from local file
      - name: Load Environment Variables
        uses: fredcicles/github-actions/.github/actions/set-variables@samples/variable-files
        with:
            variableFileName: prod
          
      # Log in to Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Azure CLI command for WebApp Deployment Slot swapping
      # https://docs.microsoft.com/en-us/cli/azure/webapp/deployment/slot?view=azure-cli-latest
      - uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp deployment slot swap -g ${{ env.resourceGroup }} -n ${{ env.webAppName }} -s ${{ env.deploymentSlotName }}
